using Microsoft.Xna.Framework;
using System.Collections.Generic;
using System.IO;
using Terraria;
using Terraria.DataStructures;
using Terraria.GameInput;
using Terraria.ModLoader;
using Terraria.ModLoader.IO;

namespace ModularEffectLib.Core
{
    public class Delegates
    {
        #region ModPlayer
        public delegate bool CanBeHitByNPC(Player me, NPC npc, ref int cooldownSlot, Item effectOwner);
        public delegate bool CanBeHitByProjectile(Player me, Projectile proj, Item effectOwner);
        public delegate bool CanBuyItem(Player me, NPC vendor, Item[] shopInventory, Item item, Item effectOwner);
        public delegate bool CanHitPvp(Player me, Item item, Player target, Item effectOwner);
        public delegate bool CanHitPvpWithProj(Player me, Projectile proj, Player target, Item effectOwner);
        public delegate bool CanSellItem(Player me, NPC vendor, Item[] shopInventory, Item item, Item effectOwner);
        public delegate bool ConsumeAmmo(Player me, Item weapon, Item ammo, Item effectOwner);
        public delegate bool ModifyNurseHeal(Player me, NPC nurse, ref int health, ref bool removeDebuffs, ref string chatText, Item effectOwner);
        public delegate bool PreHurt(Player me, bool pvp, bool quiet, ref int damage, ref int hitDirection, ref bool crit, ref bool customDamage, ref bool playSound, ref bool genGore, ref PlayerDeathReason damageSource, Item effectOwner);
        public delegate bool PreItemCheck(Player me, Item effectOwner);
        public delegate bool PreKill(Player me, double damage, int hitDirection, bool pvp, ref bool playSound, ref bool genGore, ref PlayerDeathReason damageSource, Item effectOwner);
        public delegate bool ShiftClickSlot(Player me, Item[] inventory, int context, int slot, Item effectOwner);
        public delegate bool Shoot(Player me, Item item, ref Vector2 position, ref float speedX, ref float speedY, ref int type, ref int damage, ref float knockBack, Item effectOwner);
        public delegate bool? CanHitNPC(Player me, Item item, NPC target, Item effectOwner);
        public delegate bool? CanHitNPCWithProj(Player me, Projectile proj, NPC target, Item effectOwner);
        public delegate float MeleeSpeedMultiplier(Player me, Item item, Item effectOwner);
        public delegate float UseTimeMultiplier(Player me, Item item, Item effectOwner);
        public delegate TagCompound Save(Player me, Item effectOwner);
        public delegate void AnglerQuestReward(Player me, float rareMultiplier, List<Item> rewardItems, Item effectOwner);
        public delegate void CatchFish(Player me, Item fishingRod, Item bait, int power, int liquidType, int poolSize, int worldLayer, int questFish, ref int caughtType, ref bool junk, Item effectOwner);
        public delegate void clientClone(Player me, ModPlayer clientClone, Item effectOwner);
        public delegate void DrawEffects(Player me, PlayerDrawInfo drawInfo, ref float r, ref float g, ref float b, ref float a, ref bool fullBright, Item effectOwner);
        public delegate void FrameEffects(Player me, Item effectOwner);
        public delegate void GetDyeTraderReward(Player me, List<int> rewardPool, Item effectOwner);
        public delegate void GetFishingLevel(Player me, Item fishingRod, Item bait, ref int fishingLevel, Item effectOwner);
        public delegate void GetHealLife(Player me, Item item, bool quickHeal, ref int healValue, Item effectOwner);
        public delegate void GetHealMana(Player me, Item item, bool quickHeal, ref int healValue, Item effectOwner);
        public delegate void GetWeaponCrit(Player me, Item item, ref int crit, Item effectOwner);
        public delegate void GetWeaponKnockback(Player me, Item item, ref float knockback, Item effectOwner);
        public delegate void Hurt(Player me, bool pvp, bool quiet, double damage, int hitDirection, bool crit, Item effectOwner);
        public delegate void Initialize(Player me, Item effectOwner);
        public delegate void Kill(Player me, double damage, int hitDirection, bool pvp, PlayerDeathReason damageSource, Item effectOwner);
        public delegate void Load(Player me, TagCompound tag, Item effectOwner);
        public delegate void LoadLegacy(Player me, BinaryReader reader, Item effectOwner);
        public delegate void MeleeEffects(Player me, Item item, Rectangle hitbox, Item effectOwner);
        public delegate void ModifyDrawHeadLayers(Player me, List<PlayerHeadLayer> layers, Item effectOwner);
        public delegate void ModifyDrawInfo(Player me, ref PlayerDrawInfo drawInfo, Item effectOwner);
        public delegate void ModifyDrawLayers(Player me, List<PlayerLayer> layers, Item effectOwner);
        public delegate void ModifyHitByNPC(Player me, NPC npc, ref int damage, ref bool crit, Item effectOwner);
        public delegate void ModifyHitByProjectile(Player me, Projectile proj, ref int damage, ref bool crit, Item effectOwner);
        public delegate void ModifyHitNPC(Player me, Item item, NPC target, ref int damage, ref float knockback, ref bool crit, Item effectOwner);
        public delegate void ModifyHitNPCWithProj(Player me, Projectile proj, NPC target, ref int damage, ref float knockback, ref bool crit, ref int hitDirection, Item effectOwner);
        public delegate void ModifyHitPvp(Player me, Item item, Player target, ref int damage, ref bool crit, Item effectOwner);
        public delegate void ModifyHitPvpWithProj(Player me, Projectile proj, Player target, ref int damage, ref bool crit, Item effectOwner);
        public delegate void ModifyManaCost(Player me, Item item, ref float reduce, ref float mult, Item effectOwner);
        public delegate void ModifyNursePrice(Player me, NPC nurse, int health, bool removeDebuffs, ref int price, Item effectOwner);
        public delegate void ModifyScreenPosition(Player me, Item effectOwner);
        public delegate void ModifyWeaponDamage(Player me, Item item, ref float add, ref float mult, ref float flat, Item effectOwner);
        public delegate void ModifyZoom(Player me, ref float zoom, Item effectOwner);
        public delegate void NaturalLifeRegen(Player me, ref float regen, Item effectOwner);
        public delegate void OnConsumeAmmo(Player me, Item weapon, Item ammo, Item effectOwner);
        public delegate void OnConsumeMana(Player me, Item item, int manaConsumed, Item effectOwner);
        public delegate void OnEnterWorld(Player me, Player player, Item effectOwner);
        public delegate void OnHitAnything(Player me, float x, float y, Entity victim, Item effectOwner);
        public delegate void OnHitByNPC(Player me, NPC npc, int damage, bool crit, Item effectOwner);
        public delegate void OnHitByProjectile(Player me, Projectile proj, int damage, bool crit, Item effectOwner);
        public delegate void OnHitNPC(Player me, Item item, NPC target, int damage, float knockback, bool crit, Item effectOwner);
        public delegate void OnHitNPCWithProj(Player me, Projectile proj, NPC target, int damage, float knockback, bool crit, Item effectOwner);
        public delegate void OnHitPvp(Player me, Item item, Player target, int damage, bool crit, Item effectOwner);
        public delegate void OnHitPvpWithProj(Player me, Projectile proj, Player target, int damage, bool crit, Item effectOwner);
        public delegate void OnMissingMana(Player me, Item item, int neededMana, Item effectOwner);
        public delegate void OnRespawn(Player me, Player player, Item effectOwner);
        public delegate void PlayerConnect(Player me, Player player, Item effectOwner);
        public delegate void PlayerDisconnect(Player me, Player player, Item effectOwner);
        public delegate void PostBuyItem(Player me, NPC vendor, Item[] shopInventory, Item item, Item effectOwner);
        public delegate void PostHurt(Player me, bool pvp, bool quiet, double damage, int hitDirection, bool crit, Item effectOwner);
        public delegate void PostItemCheck(Player me, Item effectOwner);
        public delegate void PostNurseHeal(Player me, NPC nurse, int health, bool removeDebuffs, int price, Item effectOwner);
        public delegate void PostSavePlayer(Player me, Item effectOwner);
        public delegate void PostSellItem(Player me, NPC vendor, Item[] shopInventory, Item item, Item effectOwner);
        public delegate void PostUpdate(Player me, Item effectOwner);
        public delegate void PostUpdateBuffs(Player me, Item effectOwner);
        public delegate void PostUpdateEquips(Player me, Item effectOwner);
        public delegate void PostUpdateMiscEffects(Player me, Item effectOwner);
        public delegate void PostUpdateRunSpeeds(Player me, Item effectOwner);
        public delegate void PreSaveCustomData(Player me, Item effectOwner);
        public delegate void PreSavePlayer(Player me, Item effectOwner);
        public delegate void PreUpdate(Player me, Item effectOwner);
        public delegate void PreUpdateBuffs(Player me, Item effectOwner);
        public delegate void PreUpdateMovement(Player me, Item effectOwner);
        public delegate void ProcessTriggers(Player me, TriggersSet triggersSet, Item effectOwner);
        public delegate void ResetEffects(Player me, Item effectOwner);
        public delegate void SendClientChanges(Player me, ModPlayer clientPlayer, Item effectOwner);
        public delegate void SetControls(Player me, Item effectOwner);
        public delegate void SetupStartInventory(Player me, IList<Item> items, bool mediumcoreDeath, Item effectOwner);
        public delegate void SyncPlayer(Player me, int toWho, int fromWho, bool newPlayer, Item effectOwner);
        public delegate void UpdateAutopause(Player me, Item effectOwner);
        public delegate void UpdateBadLifeRegen(Player me, Item effectOwner);
        public delegate void UpdateBiomes(Player me, Item effectOwner);
        public delegate void UpdateBiomeVisuals(Player me, Item effectOwner);
        public delegate void UpdateDead(Player me, Item effectOwner);
        public delegate void UpdateEquips(Player me, ref bool wallSpeedBuff, ref bool tileSpeedBuff, ref bool tileRangeBuff, Item effectOwner);
        public delegate void UpdateLifeRegen(Player me, Item effectOwner);
        public delegate void UpdateVanityAccessories(Player me, Item effectOwner);
        #endregion
    }
}
